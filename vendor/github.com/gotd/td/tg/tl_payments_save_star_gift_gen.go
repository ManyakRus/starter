// Code generated by gotdgen, DO NOT EDIT.

package tg

import (
	"context"
	"errors"
	"fmt"
	"sort"
	"strings"

	"go.uber.org/multierr"

	"github.com/gotd/td/bin"
	"github.com/gotd/td/tdjson"
	"github.com/gotd/td/tdp"
	"github.com/gotd/td/tgerr"
)

// No-op definition for keeping imports.
var (
	_ = bin.Buffer{}
	_ = context.Background()
	_ = fmt.Stringer(nil)
	_ = strings.Builder{}
	_ = errors.Is
	_ = multierr.AppendInto
	_ = sort.Ints
	_ = tdp.Format
	_ = tgerr.Error{}
	_ = tdjson.Encoder{}
)

// PaymentsSaveStarGiftRequest represents TL type `payments.saveStarGift#87acf08e`.
//
// See https://core.telegram.org/method/payments.saveStarGift for reference.
type PaymentsSaveStarGiftRequest struct {
	// Flags field of PaymentsSaveStarGiftRequest.
	Flags bin.Fields
	// Unsave field of PaymentsSaveStarGiftRequest.
	Unsave bool
	// UserID field of PaymentsSaveStarGiftRequest.
	UserID InputUserClass
	// MsgID field of PaymentsSaveStarGiftRequest.
	MsgID int
}

// PaymentsSaveStarGiftRequestTypeID is TL type id of PaymentsSaveStarGiftRequest.
const PaymentsSaveStarGiftRequestTypeID = 0x87acf08e

// Ensuring interfaces in compile-time for PaymentsSaveStarGiftRequest.
var (
	_ bin.Encoder     = &PaymentsSaveStarGiftRequest{}
	_ bin.Decoder     = &PaymentsSaveStarGiftRequest{}
	_ bin.BareEncoder = &PaymentsSaveStarGiftRequest{}
	_ bin.BareDecoder = &PaymentsSaveStarGiftRequest{}
)

func (s *PaymentsSaveStarGiftRequest) Zero() bool {
	if s == nil {
		return true
	}
	if !(s.Flags.Zero()) {
		return false
	}
	if !(s.Unsave == false) {
		return false
	}
	if !(s.UserID == nil) {
		return false
	}
	if !(s.MsgID == 0) {
		return false
	}

	return true
}

// String implements fmt.Stringer.
func (s *PaymentsSaveStarGiftRequest) String() string {
	if s == nil {
		return "PaymentsSaveStarGiftRequest(nil)"
	}
	type Alias PaymentsSaveStarGiftRequest
	return fmt.Sprintf("PaymentsSaveStarGiftRequest%+v", Alias(*s))
}

// FillFrom fills PaymentsSaveStarGiftRequest from given interface.
func (s *PaymentsSaveStarGiftRequest) FillFrom(from interface {
	GetUnsave() (value bool)
	GetUserID() (value InputUserClass)
	GetMsgID() (value int)
}) {
	s.Unsave = from.GetUnsave()
	s.UserID = from.GetUserID()
	s.MsgID = from.GetMsgID()
}

// TypeID returns type id in TL schema.
//
// See https://core.telegram.org/mtproto/TL-tl#remarks.
func (*PaymentsSaveStarGiftRequest) TypeID() uint32 {
	return PaymentsSaveStarGiftRequestTypeID
}

// TypeName returns name of type in TL schema.
func (*PaymentsSaveStarGiftRequest) TypeName() string {
	return "payments.saveStarGift"
}

// TypeInfo returns info about TL type.
func (s *PaymentsSaveStarGiftRequest) TypeInfo() tdp.Type {
	typ := tdp.Type{
		Name: "payments.saveStarGift",
		ID:   PaymentsSaveStarGiftRequestTypeID,
	}
	if s == nil {
		typ.Null = true
		return typ
	}
	typ.Fields = []tdp.Field{
		{
			Name:       "Unsave",
			SchemaName: "unsave",
			Null:       !s.Flags.Has(0),
		},
		{
			Name:       "UserID",
			SchemaName: "user_id",
		},
		{
			Name:       "MsgID",
			SchemaName: "msg_id",
		},
	}
	return typ
}

// SetFlags sets flags for non-zero fields.
func (s *PaymentsSaveStarGiftRequest) SetFlags() {
	if !(s.Unsave == false) {
		s.Flags.Set(0)
	}
}

// Encode implements bin.Encoder.
func (s *PaymentsSaveStarGiftRequest) Encode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode payments.saveStarGift#87acf08e as nil")
	}
	b.PutID(PaymentsSaveStarGiftRequestTypeID)
	return s.EncodeBare(b)
}

// EncodeBare implements bin.BareEncoder.
func (s *PaymentsSaveStarGiftRequest) EncodeBare(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't encode payments.saveStarGift#87acf08e as nil")
	}
	s.SetFlags()
	if err := s.Flags.Encode(b); err != nil {
		return fmt.Errorf("unable to encode payments.saveStarGift#87acf08e: field flags: %w", err)
	}
	if s.UserID == nil {
		return fmt.Errorf("unable to encode payments.saveStarGift#87acf08e: field user_id is nil")
	}
	if err := s.UserID.Encode(b); err != nil {
		return fmt.Errorf("unable to encode payments.saveStarGift#87acf08e: field user_id: %w", err)
	}
	b.PutInt(s.MsgID)
	return nil
}

// Decode implements bin.Decoder.
func (s *PaymentsSaveStarGiftRequest) Decode(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode payments.saveStarGift#87acf08e to nil")
	}
	if err := b.ConsumeID(PaymentsSaveStarGiftRequestTypeID); err != nil {
		return fmt.Errorf("unable to decode payments.saveStarGift#87acf08e: %w", err)
	}
	return s.DecodeBare(b)
}

// DecodeBare implements bin.BareDecoder.
func (s *PaymentsSaveStarGiftRequest) DecodeBare(b *bin.Buffer) error {
	if s == nil {
		return fmt.Errorf("can't decode payments.saveStarGift#87acf08e to nil")
	}
	{
		if err := s.Flags.Decode(b); err != nil {
			return fmt.Errorf("unable to decode payments.saveStarGift#87acf08e: field flags: %w", err)
		}
	}
	s.Unsave = s.Flags.Has(0)
	{
		value, err := DecodeInputUser(b)
		if err != nil {
			return fmt.Errorf("unable to decode payments.saveStarGift#87acf08e: field user_id: %w", err)
		}
		s.UserID = value
	}
	{
		value, err := b.Int()
		if err != nil {
			return fmt.Errorf("unable to decode payments.saveStarGift#87acf08e: field msg_id: %w", err)
		}
		s.MsgID = value
	}
	return nil
}

// SetUnsave sets value of Unsave conditional field.
func (s *PaymentsSaveStarGiftRequest) SetUnsave(value bool) {
	if value {
		s.Flags.Set(0)
		s.Unsave = true
	} else {
		s.Flags.Unset(0)
		s.Unsave = false
	}
}

// GetUnsave returns value of Unsave conditional field.
func (s *PaymentsSaveStarGiftRequest) GetUnsave() (value bool) {
	if s == nil {
		return
	}
	return s.Flags.Has(0)
}

// GetUserID returns value of UserID field.
func (s *PaymentsSaveStarGiftRequest) GetUserID() (value InputUserClass) {
	if s == nil {
		return
	}
	return s.UserID
}

// GetMsgID returns value of MsgID field.
func (s *PaymentsSaveStarGiftRequest) GetMsgID() (value int) {
	if s == nil {
		return
	}
	return s.MsgID
}

// PaymentsSaveStarGift invokes method payments.saveStarGift#87acf08e returning error if any.
//
// See https://core.telegram.org/method/payments.saveStarGift for reference.
func (c *Client) PaymentsSaveStarGift(ctx context.Context, request *PaymentsSaveStarGiftRequest) (bool, error) {
	var result BoolBox

	if err := c.rpc.Invoke(ctx, request, &result); err != nil {
		return false, err
	}
	_, ok := result.Bool.(*BoolTrue)
	return ok, nil
}
